import requests
import socket

def check_ssrf(target_url):
    # Targeting a local/internal service
    payload = {
        "url": "http://127.0.0.1:80",  # Example: trying to access localhost
        "url": "http://169.254.169.254"
    }
    try:
        response = requests.post(target_url, json=payload, timeout=10)
        if response.status_code == 200 and "localhost" in response.text:
            return True  # Vulnerable
        return False  # Not Vulnerable
    except requests.RequestException:
        return False  # Unable to test

def check_insecure_dev_envs(target_url):
    # Common test/dev environment paths
    common_paths = [
        "/phpinfo.php",       # PHP info page
        "/test",              # Generic test page
        "/admin/dev",         # Development admin page
        "/debug",             # Debug endpoint
        "/staging"            # Staging environment
    ]
    
    try:
        for path in common_paths:
            response = requests.get(target_url + path, timeout=10)
            if response.status_code == 200 and "test" in response.text.lower():
                return True  # Vulnerable (e.g., accessible dev/test environment)
        return False  # Not Vulnerable
    except requests.RequestException:
        return False  # Unable to test
    
def check_subdomain_takeover(subdomain):
    # Check if the subdomain resolves
    try:
        ip = socket.gethostbyname(subdomain)
        response = requests.get(f"http://{subdomain}", timeout=10)
        if "no such host" in response.text.lower() or "error 404" in response.text.lower():
            return True  # Vulnerable (potential subdomain takeover)
        return False  # Not Vulnerable
    except (socket.gaierror, requests.RequestException):
        return False  # Unable to test