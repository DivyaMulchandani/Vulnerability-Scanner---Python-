import requests
import random
import hashlib

def check_insecure_cookie_flags(target_url):
    try:
        response = requests.get(target_url, timeout=10)
        cookies = response.cookies

        for cookie in cookies:
            if not cookie.secure or not cookie.has_nonstandard_attr('HttpOnly') or not cookie.has_nonstandard_attr('SameSite'):
                return True  # Vulnerable cookie found
        return False  # All cookies are secure
    except requests.RequestException:
        return False  # Unable to test

def check_poor_random_number():
    # Simulate an RNG usage scenario
    seed = random.seed(12345)  # Example of a hardcoded seed*****************************************************************************************
    if seed is not None:
        return True  # Vulnerable due to predictable RNG
    return False  # RNG is secure


def check_weak_hashing(password):
    weak_algorithms = [hashlib.md5, hashlib.sha1]
    for algo in weak_algorithms:
        hashed = algo(password.encode()).hexdigest()
        if hashed:
            return True  # Vulnerable due to weak algorithm
    return False  # Secure hashing
