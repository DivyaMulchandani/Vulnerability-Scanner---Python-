import requests
import re

def is_session_hijacking_vulnerable(url):
    response = requests.get(url)
    cookies = response.cookies

    # Check if 'secure' and 'HttpOnly' flags are set for session cookies
    vulnerable = False
    for cookie in cookies:
        if "session" in cookie.name.lower() and not cookie.get("secure"):
            print(f"Session cookie '{cookie.name}' is not secure.")
            vulnerable = True
        if "session" in cookie.name.lower() and not cookie.get("HttpOnly"):
            print(f"Session cookie '{cookie.name}' is not HttpOnly.")
            vulnerable = True
            
    # Simulate session hijacking attempt by using a valid session ID (in a real-world attack, this would be stolen)
    session_cookie = cookies.get('session')
    if session_cookie:
        response = requests.get(url, cookies={"session": session_cookie})
        if response.status_code == 200:
            print(f"Session hijacking successful with cookie '{session_cookie}'")
            vulnerable = True

    return vulnerable
